name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取所有历史记录，用于生成完整的更新日志

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: '1.20'  # 使用你的项目所需的 Go 版本

      - name: Build for Windows
        run: GOOS=windows GOARCH=amd64 go build -o url_checker_windows_amd64.exe main.go

      - name: Build for macOS
        run: GOOS=darwin GOARCH=amd64 go build -o url_checker_macos_amd64 main.go

      - name: Build for Linux
        run: GOOS=linux GOARCH=amd64 go build -o url_checker_linux_amd64 main.go

      - name: Generate Changelog
        id: changelog
        uses: metcalfc/changelog-generator@v4.0.1
        with:
          myToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}  # 使用 github.ref_name 而不是 github.ref
          release_name: Release ${{ github.ref_name }}
          body: ${{ steps.changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Upload Windows Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./url_checker_windows_amd64.exe
          asset_name: url_checker_windows_amd64.exe
          asset_content_type: application/octet-stream

      - name: Upload macOS Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./url_checker_macos_amd64
          asset_name: url_checker_macos_amd64
          asset_content_type: application/octet-stream

      - name: Upload Linux Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./url_checker_linux_amd64
          asset_name: url_checker_linux_amd64
          asset_content_type: application/octet-stream
